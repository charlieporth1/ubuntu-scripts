#!/usr/bin/parallel --shebang-wrap --pipe /bin/bash
#fastlane env
curl -fsS --retry 3 https://hc-ping.com/64b266e2-f3d4-4d82-b8ee-43a65e884476
. /usr/bin/cred.sh
cd /mnt/HDD/watchbuild/
if [[ ! -f  /mnt/HDD/buildstatus.txt ]]; then
	touch  /mnt/HDD/buildstatus.txt 
fi
if [[ ! -f  /mnt/HDD/buildstatusT.txt ]]; then
	touch  /mnt/HDD/buildstatusT.txt 
fi
function onlyOnce() {
#       isRunning=`sudo ps -x |  grep -o "Bots.sh"`
#       isRunning=`sudo ps -x | grep "Bots.sh" | grep -v 'grep --color=auto Bots.sh'`
        isRunning=`sudo ps -x | grep "iTunes.sh" | grep -v  'grep iTunes.sh'`
        isThisOne=`echo $isRunning | awk '{print $4}' | sort  -k4 | tail +3` ##this is the simplest way to do this for loop is the other option for making sure 
        log "isRunning $isRunning"
        log "isThisOne $isThisOne"
        if [[ -n $isRunning && -n $isThisOne ]]; then
                echo "already running"
                curl -fsS --retry 3 https://hc-ping.com/2db2032d-649c-43b5-947a-cc132f769f5d
#               torOff
                sleep 1s
                exit 0
        fi
}
#echo $itcpwd | sudo nohup watchbuild -a com.studiosoapp.student -u charlieporth@yahoo.com > /mnt/HDD/buildprocessalert.out 2> /mnt/HDD/buildprocessalert.err 
export cmd="$(/mnt/HDD/watchbuild/bin/watchbuild -a com.studiosoapp.student -u charlieporth@yahoo.com  | awk '{print $2}'  | cut -d '/' -f 13-14  | grep '/')" 
export cmdT="$(/mnt/HDD/watchbuild/bin/watchbuild -a com.Studioso-teacher -u charlieporth@yahoo.com  | awk '{print $2}'  | cut -d '/' -f 13-14  | grep '/')"
sleep 3s
export pre="$(cat /mnt/HDD/buildstatus.txt)"
export preT="$(cat /mnt/HDD/buildstatusT.txt)"
sleep 3s
echo "status"
echo "cmd: " $cmd
echo "pre: " $pre
echo "cmdT: " $cmdT
echo "preT: " $preT
sleep 3s
function s() {
sleep 5s
if [[ "$pre" != "$cmd" ]]; then
	if [ -n  "$cmd" ]; then
		sudo echo "$cmd"  > /mnt/HDD/buildstatus.txt
	else
		echo "emtpy String"
	fi
	sync
	sleep 1s
	while true 
	do
		export var=$(/mnt/HDD/watchbuild/bin/watchbuild -a com.studiosoapp.student -u charlieporth@yahoo.com | grep -o "Successfully finished processing the build")
		echo "var " $var
		if [[ ! -z "$var" ]]; then
			sendemail -f root@otih-oith.us.to -t $phonee  -m "Apple Successfully finished processing the build STUDENT please submit the App Store; Date: $(date) and Version: $pre" -s smtp.gmail.com:587 -o tls=yes -xu $usr  -xp  $passwd
			killall ruby
			sleep 3s
			break
		else
			echo "not done"
		fi
	done
else
	echo "is equal"
fi
}
function t() {
sleep 5s
if [[ "$preT" != "$cmdT" ]]; then
	if [ -n "$cmd" ]; then
		sudo echo "$cmdT"  > /mnt/HDD/buildstatusT.txt
	else
		echo "emtpy String"
	fi
	sync
	sleep 1s
	while true 
	do
		sleep 2s
		export varT=$(/mnt/HDD/watchbuild/bin/watchbuild -a com.Studioso-teacher -u charlieporth@yahoo.com | grep -o "Successfully finished processing the build")
		echo "varT " $varT
		if [[ ! -z "$varT" ]]; then 
			sendemail -f root@otih-oith.us.to -t $phonee  -m "Apple Successfully finished processing the build TEACHER please submit the App Store; Date: $(date) and Version: $pre " -s smtp.gmail.com:587 -o tls=yes -xu $usr  -xp  $passwd
			killall ruby
			sleep 3s
			break
		else
			echo "not done"
		fi
	done
else
	echo "is equal"
fi
}
t &!
s &!
sync
disown -a && exit 0
